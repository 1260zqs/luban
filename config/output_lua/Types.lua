
--[[------------------------------------------------------------------------------
-- <auto-generated>
--     This code was generated by a tool.
--     Changes to this file may cause incorrect behavior and will be lost if
--     the code is regenerated.
-- </auto-generated>
--]]------------------------------------------------------------------------------



local consts =
{
    ---@class test.DemoConst
     ---@field public x1 int
     ---@field public x2 long
     ---@field public x3 float
     ---@field public x4 double
    ['test.DemoConst'] = {   x1=0,  x2=3242,  x3=444.3,  x4=55.3,  };
}

local enums =
{
    ---@class test.DemoEnum
     ---@field public A int
     ---@field public B int
     ---@field public C int
     ---@field public D int
    ['test.DemoEnum'] = {   A=1,  B=2,  C=4,  D=5,  };
    ---@class test.ETestUeType
     ---@field public WHITE int
     ---@field public BLACK int
    ['test.ETestUeType'] = {   WHITE=0,  BLACK=1,  };
    ---@class test.ETestEmptyEnum
    ['test.ETestEmptyEnum'] = {   };
    ---@class test.ETestEmptyEnum2
     ---@field public SMALL_THAN_256 int
     ---@field public X_256 int
     ---@field public X_257 int
    ['test.ETestEmptyEnum2'] = {   SMALL_THAN_256=255,  X_256=256,  X_257=257,  };
}

local beans = {}
---@class test.DemoType1 
---@field public x1 int
beans['test.DemoType1'] =
{
    { name='x1', type='int'},
}

---@class test.DemoDynamic 
---@field public x1 int
beans['test.DemoDynamic'] =
{
    { name='x1', type='int'},
}

---@class test.DemoD2 :test.DemoDynamic 
---@field public x2 int
beans['test.DemoD2'] =
{
    { name='x1', type='int'},
    { name='x2', type='int'},
}

---@class test.DemoD3 :test.DemoDynamic 
---@field public x3 int
beans['test.DemoD3'] =
{
    { name='x1', type='int'},
    { name='x3', type='int'},
}

---@class test.DemoE1 :test.DemoD3 
---@field public x4 int
beans['test.DemoE1'] =
{
    { name='x1', type='int'},
    { name='x3', type='int'},
    { name='x4', type='int'},
}

---@class test.DemoD5 :test.DemoDynamic 
---@field public time test.DateTimeRange
beans['test.DemoD5'] =
{
    { name='x1', type='int'},
    { name='time', type='test.DateTimeRange'},
}

---@class test.DemoE2 
---@field public y1 int
---@field public y2 bool
beans['test.DemoE2'] =
{
    { name='y1', type='int'},
    { name='y2', type='bool'},
}

---@class test.DemoType2 
---@field public x4 int
---@field public x1 bool
---@field public x2 byte
---@field public x3 short
---@field public x5 long
---@field public x6 float
---@field public x7 double
---@field public x8_0 short
---@field public x8 int
---@field public x9 long
---@field public x10 string
---@field public x12 test.DemoType1
---@field public x13 test.DemoEnum
---@field public x14 test.DemoDynamic
---@field public v2 vector2
---@field public v3 vector3
---@field public v4 vector4
---@field public t1 int
---@field public k1 int[]
---@field public k2 int[]
---@field public k3 int[]
---@field public k4 int[]
---@field public k5 int[]
---@field public k6 int[]
---@field public k7 int[]
---@field public k8 table<int,int>
---@field public k9 test.DemoE2[]
---@field public k15 test.DemoDynamic[]
beans['test.DemoType2'] =
{
    { name='x4', type='int'},
    { name='x1', type='bool'},
    { name='x2', type='byte'},
    { name='x3', type='short'},
    { name='x5', type='long'},
    { name='x6', type='float'},
    { name='x7', type='double'},
    { name='x8_0', type='short'},
    { name='x8', type='int'},
    { name='x9', type='long'},
    { name='x10', type='string'},
    { name='x12', type='test.DemoType1'},
    { name='x13', type='test.DemoEnum'},
    { name='x14', type='test.DemoDynamic'},
    { name='v2', type='vector2'},
    { name='v3', type='vector3'},
    { name='v4', type='vector4'},
    { name='t1', type='int'},
    { name='k1', type='int[]'},
    { name='k2', type='int[]'},
    { name='k3', type='int[]'},
    { name='k4', type='int[]'},
    { name='k5', type='int[]'},
    { name='k6', type='int[]'},
    { name='k7', type='int[]'},
    { name='k8', type='table<int,int>'},
    { name='k9', type='test.DemoE2[]'},
    { name='k15', type='test.DemoDynamic[]'},
}

---@class test.DateTimeRange 
---@field public start_time int
---@field public end_time int
beans['test.DateTimeRange'] =
{
    { name='start_time', type='int'},
    { name='end_time', type='int'},
}

---@class test.DemoSingletonType 
---@field public id int
---@field public name string
---@field public date test.DemoDynamic
beans['test.DemoSingletonType'] =
{
    { name='id', type='int'},
    { name='name', type='string'},
    { name='date', type='test.DemoDynamic'},
}

---@class test.MultiRowType1 
---@field public id int
---@field public x int
beans['test.MultiRowType1'] =
{
    { name='id', type='int'},
    { name='x', type='int'},
}

---@class test.MultiRowType2 
---@field public id int
---@field public x int
---@field public y float
beans['test.MultiRowType2'] =
{
    { name='id', type='int'},
    { name='x', type='int'},
    { name='y', type='float'},
}

---@class test.MultiRowRecord 
---@field public id int
---@field public name string
---@field public one_rows test.MultiRowType1[]
---@field public multi_rows1 test.MultiRowType1[]
---@field public multi_rows2 test.MultiRowType1[]
---@field public multi_rows3 test.MultiRowType2[]
---@field public multi_rows4 table<int,test.MultiRowType2>
beans['test.MultiRowRecord'] =
{
    { name='id', type='int'},
    { name='name', type='string'},
    { name='one_rows', type='test.MultiRowType1[]'},
    { name='multi_rows1', type='test.MultiRowType1[]'},
    { name='multi_rows2', type='test.MultiRowType1[]'},
    { name='multi_rows3', type='test.MultiRowType2[]'},
    { name='multi_rows4', type='table<int,test.MultiRowType2>'},
}

---@class test.TestUeType 
---@field public x1 bool
---@field public x2 byte
---@field public x3 short
---@field public x4 int
---@field public x5 long
---@field public x6 float
---@field public x10 string
---@field public x12 test.DemoType1
---@field public x13 test.ETestUeType
---@field public v2 vector2
---@field public v3 vector3
---@field public v4 vector4
---@field public t1 int
---@field public k1 int[]
---@field public k2 int[]
---@field public k3 int[]
---@field public k4 int[]
---@field public k5 int[]
---@field public k6 int[]
---@field public k7 int[]
---@field public k8 table<int,int>
---@field public k9 test.DemoE2[]
beans['test.TestUeType'] =
{
    { name='x1', type='bool'},
    { name='x2', type='byte'},
    { name='x3', type='short'},
    { name='x4', type='int'},
    { name='x5', type='long'},
    { name='x6', type='float'},
    { name='x10', type='string'},
    { name='x12', type='test.DemoType1'},
    { name='x13', type='test.ETestUeType'},
    { name='v2', type='vector2'},
    { name='v3', type='vector3'},
    { name='v4', type='vector4'},
    { name='t1', type='int'},
    { name='k1', type='int[]'},
    { name='k2', type='int[]'},
    { name='k3', type='int[]'},
    { name='k4', type='int[]'},
    { name='k5', type='int[]'},
    { name='k6', type='int[]'},
    { name='k7', type='int[]'},
    { name='k8', type='table<int,int>'},
    { name='k9', type='test.DemoE2[]'},
}

---@class test.H1 
---@field public y2 test.H2
---@field public y3 int
beans['test.H1'] =
{
    { name='y2', type='test.H2'},
    { name='y3', type='int'},
}

---@class test.H2 
---@field public z2 int
---@field public z3 int
beans['test.H2'] =
{
    { name='z2', type='int'},
    { name='z3', type='int'},
}

---@class test.MultiRowTitle 
---@field public id int
---@field public name string
---@field public x1 test.H1
---@field public x2 test.H2[]
---@field public x3 test.H2[]
beans['test.MultiRowTitle'] =
{
    { name='id', type='int'},
    { name='name', type='string'},
    { name='x1', type='test.H1'},
    { name='x2', type='test.H2[]'},
    { name='x3', type='test.H2[]'},
}

---@class test.login.RoleInfo 
---@field public role_id long
beans['test.login.RoleInfo'] =
{
    { name='role_id', type='long'},
}


local tables =
{
    { name='TbFullTypes', file='test.TbFullTypes.bin', mode='map', index='x3', value_type='test.DemoType2' },

    { name='TbSingleton', file='test.TbSingleton.bin', mode='one', value_type='test.DemoSingletonType'},
    
    { name='TbDataFromJson', file='test.TbDataFromJson.bin', mode='map', index='x4', value_type='test.DemoType2' },

    { name='TbDataFromXml', file='test.TbDataFromXml.bin', mode='map', index='x4', value_type='test.DemoType2' },

    { name='TbDataFromLua', file='test.TbDataFromLua.bin', mode='map', index='x4', value_type='test.DemoType2' },

    { name='TbTwoKey', file='test.TbTwoKey.bin', mode='bmap', index1='x3', index2='x4', value_type='test.DemoType2' },

    { name='TbMultiRowRecord', file='test.TbMultiRowRecord.bin', mode='map', index='id', value_type='test.MultiRowRecord' },

    { name='TbMultiRowTitle', file='test.TbMultiRowTitle.bin', mode='map', index='id', value_type='test.MultiRowTitle' },

}

return { consts = consts, enums = enums, beans = beans, tables = tables }

